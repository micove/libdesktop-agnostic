/* desktop-agnostic.vapi generated by valac 0.10.4, do not modify. */

[CCode (cprefix = "DesktopAgnostic", lower_case_cprefix = "desktop_agnostic_")]
namespace DesktopAgnostic {
	[CCode (cheader_filename = "libdesktop-agnostic/desktop-agnostic.h")]
	public class Color : GLib.Object {
		public Color (Gdk.Color color, ushort alpha);
		public static ushort cairo_value_to_gdk (double value);
		public Color.from_string (string spec) throws DesktopAgnostic.ColorParseError;
		public Color.from_values (ushort red, ushort green, ushort blue, ushort alpha);
		public static double gdk_value_to_cairo (ushort value);
		public void get_cairo_color (out double red = null, out double green = null, out double blue = null, out double alpha = null);
		public void set_cairo_color (double red, double green, double blue, double alpha);
		public string to_html_color ();
		public string to_string ();
		public uint alpha { get; set; }
		public uint blue { get; set; }
		public Gdk.Color color { get; set; }
		public uint green { get; set; }
		public uint red { get; set; }
	}
	[CCode (cheader_filename = "libdesktop-agnostic/desktop-agnostic.h")]
	public class ModuleLoader : GLib.Object {
		public static unowned DesktopAgnostic.ModuleLoader get_default ();
		public static string[] get_search_paths ();
		public GLib.Type guess_module (string library_prefix);
		public bool is_guess_module_loaded ();
		public GLib.Type load (string name);
		public GLib.Type load_from_path (string name, string path);
	}
	[CCode (cprefix = "DESKTOP_AGNOSTIC_COLOR_PARSE_ERROR_", cheader_filename = "libdesktop-agnostic/desktop-agnostic.h")]
	public errordomain ColorParseError {
		INVALID_INPUT,
		INVALID_ALPHA,
	}
	[CCode (cprefix = "DESKTOP_AGNOSTIC_MODULE_ERROR_", cheader_filename = "libdesktop-agnostic/desktop-agnostic.h")]
	public errordomain ModuleError {
		NO_GMODULE,
	}
	[CCode (cheader_filename = "libdesktop-agnostic/desktop-agnostic.h")]
	public static GLib.Type get_module_type (string prefix, string key) throws GLib.Error;
}
