/* desktop-agnostic.h generated by valac, the Vala compiler, do not modify */


#ifndef __DEFAULT_LIBDESKTOP_AGNOSTIC_DESKTOP_AGNOSTIC_H__
#define __DEFAULT_LIBDESKTOP_AGNOSTIC_DESKTOP_AGNOSTIC_H__

#include <glib.h>
#include <glib-object.h>
#include <gdk/gdk.h>
#include <stdlib.h>
#include <string.h>
#include <float.h>
#include <math.h>

G_BEGIN_DECLS


#define DESKTOP_AGNOSTIC_TYPE_COLOR (desktop_agnostic_color_get_type ())
#define DESKTOP_AGNOSTIC_COLOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DESKTOP_AGNOSTIC_TYPE_COLOR, DesktopAgnosticColor))
#define DESKTOP_AGNOSTIC_COLOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DESKTOP_AGNOSTIC_TYPE_COLOR, DesktopAgnosticColorClass))
#define DESKTOP_AGNOSTIC_IS_COLOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DESKTOP_AGNOSTIC_TYPE_COLOR))
#define DESKTOP_AGNOSTIC_IS_COLOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DESKTOP_AGNOSTIC_TYPE_COLOR))
#define DESKTOP_AGNOSTIC_COLOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DESKTOP_AGNOSTIC_TYPE_COLOR, DesktopAgnosticColorClass))

typedef struct _DesktopAgnosticColor DesktopAgnosticColor;
typedef struct _DesktopAgnosticColorClass DesktopAgnosticColorClass;
typedef struct _DesktopAgnosticColorPrivate DesktopAgnosticColorPrivate;

#define DESKTOP_AGNOSTIC_TYPE_MODULE_LOADER (desktop_agnostic_module_loader_get_type ())
#define DESKTOP_AGNOSTIC_MODULE_LOADER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DESKTOP_AGNOSTIC_TYPE_MODULE_LOADER, DesktopAgnosticModuleLoader))
#define DESKTOP_AGNOSTIC_MODULE_LOADER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DESKTOP_AGNOSTIC_TYPE_MODULE_LOADER, DesktopAgnosticModuleLoaderClass))
#define DESKTOP_AGNOSTIC_IS_MODULE_LOADER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DESKTOP_AGNOSTIC_TYPE_MODULE_LOADER))
#define DESKTOP_AGNOSTIC_IS_MODULE_LOADER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DESKTOP_AGNOSTIC_TYPE_MODULE_LOADER))
#define DESKTOP_AGNOSTIC_MODULE_LOADER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DESKTOP_AGNOSTIC_TYPE_MODULE_LOADER, DesktopAgnosticModuleLoaderClass))

typedef struct _DesktopAgnosticModuleLoader DesktopAgnosticModuleLoader;
typedef struct _DesktopAgnosticModuleLoaderClass DesktopAgnosticModuleLoaderClass;
typedef struct _DesktopAgnosticModuleLoaderPrivate DesktopAgnosticModuleLoaderPrivate;

typedef enum  {
	DESKTOP_AGNOSTIC_COLOR_PARSE_ERROR_INVALID_INPUT,
	DESKTOP_AGNOSTIC_COLOR_PARSE_ERROR_INVALID_ALPHA
} DesktopAgnosticColorParseError;
#define DESKTOP_AGNOSTIC_COLOR_PARSE_ERROR desktop_agnostic_color_parse_error_quark ()
struct _DesktopAgnosticColor {
	GObject parent_instance;
	DesktopAgnosticColorPrivate * priv;
};

struct _DesktopAgnosticColorClass {
	GObjectClass parent_class;
};

typedef enum  {
	DESKTOP_AGNOSTIC_MODULE_ERROR_NO_GMODULE
} DesktopAgnosticModuleError;
#define DESKTOP_AGNOSTIC_MODULE_ERROR desktop_agnostic_module_error_quark ()
struct _DesktopAgnosticModuleLoader {
	GObject parent_instance;
	DesktopAgnosticModuleLoaderPrivate * priv;
};

struct _DesktopAgnosticModuleLoaderClass {
	GObjectClass parent_class;
};


GQuark desktop_agnostic_color_parse_error_quark (void);
GType desktop_agnostic_color_get_type (void);
DesktopAgnosticColor* desktop_agnostic_color_new (GdkColor* color, gushort alpha);
DesktopAgnosticColor* desktop_agnostic_color_construct (GType object_type, GdkColor* color, gushort alpha);
DesktopAgnosticColor* desktop_agnostic_color_new_from_values (gushort red, gushort green, gushort blue, gushort alpha);
DesktopAgnosticColor* desktop_agnostic_color_construct_from_values (GType object_type, gushort red, gushort green, gushort blue, gushort alpha);
DesktopAgnosticColor* desktop_agnostic_color_new_from_string (const char* spec, GError** error);
DesktopAgnosticColor* desktop_agnostic_color_construct_from_string (GType object_type, const char* spec, GError** error);
char* desktop_agnostic_color_to_html_color (DesktopAgnosticColor* self);
char* desktop_agnostic_color_to_string (DesktopAgnosticColor* self);
void desktop_agnostic_color_get_cairo_color (DesktopAgnosticColor* self, double* red, double* green, double* blue, double* alpha);
void desktop_agnostic_color_set_cairo_color (DesktopAgnosticColor* self, double red, double green, double blue, double alpha);
gushort desktop_agnostic_color_cairo_value_to_gdk (double value);
double desktop_agnostic_color_gdk_value_to_cairo (gushort value);
void desktop_agnostic_color_get_color (DesktopAgnosticColor* self, GdkColor* result);
void desktop_agnostic_color_set_color (DesktopAgnosticColor* self, GdkColor* value);
guint desktop_agnostic_color_get_red (DesktopAgnosticColor* self);
void desktop_agnostic_color_set_red (DesktopAgnosticColor* self, guint value);
guint desktop_agnostic_color_get_green (DesktopAgnosticColor* self);
void desktop_agnostic_color_set_green (DesktopAgnosticColor* self, guint value);
guint desktop_agnostic_color_get_blue (DesktopAgnosticColor* self);
void desktop_agnostic_color_set_blue (DesktopAgnosticColor* self, guint value);
guint desktop_agnostic_color_get_alpha (DesktopAgnosticColor* self);
void desktop_agnostic_color_set_alpha (DesktopAgnosticColor* self, guint value);
GQuark desktop_agnostic_module_error_quark (void);
GType desktop_agnostic_module_loader_get_type (void);
DesktopAgnosticModuleLoader* desktop_agnostic_module_loader_get_default (void);
char** desktop_agnostic_module_loader_get_search_paths (int* result_length1);
GType desktop_agnostic_module_loader_load_from_path (DesktopAgnosticModuleLoader* self, const char* name, const char* path);
GType desktop_agnostic_module_loader_load (DesktopAgnosticModuleLoader* self, const char* name);
gboolean desktop_agnostic_module_loader_is_guess_module_loaded (DesktopAgnosticModuleLoader* self);
GType desktop_agnostic_module_loader_guess_module (DesktopAgnosticModuleLoader* self, const char* library_prefix);
GType desktop_agnostic_get_module_type (const char* prefix, const char* key, GError** error);


G_END_DECLS

#endif
