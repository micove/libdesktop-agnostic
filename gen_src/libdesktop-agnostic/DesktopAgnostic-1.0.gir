<?xml version="1.0"?>
<repository version="1.0" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="GObject" version="2.0"/>
<include name="Gdk" version="2.0"/>
<package name="desktop-agnostic"/>
<c:include name="libdesktop-agnostic/desktop-agnostic.h"/>
<namespace name="DesktopAgnostic" version="1.0" c:prefix="DesktopAgnostic">
	<annotation key="ccode.cheader-filename" value="libdesktop-agnostic/desktop-agnostic.h"/>
	<errordomain name="ColorParseError" get-quark="desktop_agnostic_color_parse_error_quark" codes="ColorParseError">
</errordomain>
	<enumeration name="ColorParseError" c:type="DesktopAgnosticColorParseError">
		<member name="invalid_input" c:identifier="DESKTOP_AGNOSTIC_COLOR_PARSE_ERROR_INVALID_INPUT" value="0"/>
		<member name="invalid_alpha" c:identifier="DESKTOP_AGNOSTIC_COLOR_PARSE_ERROR_INVALID_ALPHA" value="1"/>
	</enumeration>
	<errordomain name="ModuleError" get-quark="desktop_agnostic_module_error_quark" codes="ModuleError">
</errordomain>
	<enumeration name="ModuleError" c:type="DesktopAgnosticModuleError">
		<member name="no_gmodule" c:identifier="DESKTOP_AGNOSTIC_MODULE_ERROR_NO_GMODULE" value="0"/>
	</enumeration>
	<class name="Color" c:type="DesktopAgnosticColor" glib:type-name="DesktopAgnosticColor" glib:get-type="desktop_agnostic_color_get_type" glib:type-struct="ColorClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="any" c:type="DesktopAgnosticColorPrivate*"/>
		</field>
		<constructor name="new" c:identifier="desktop_agnostic_color_new">
			<parameters>
				<parameter name="color" transfer-ownership="none">
					<type name="Gdk.Color" c:type="GdkColor"/>
				</parameter>
				<parameter name="alpha" transfer-ownership="none">
					<type name="ushort" c:type="gushort"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="DesktopAgnostic.Color" c:type="DesktopAgnosticColor*"/>
			</return-value>
		</constructor>
		<constructor name="from_values" c:identifier="desktop_agnostic_color_new_from_values">
			<parameters>
				<parameter name="red" transfer-ownership="none">
					<type name="ushort" c:type="gushort"/>
				</parameter>
				<parameter name="green" transfer-ownership="none">
					<type name="ushort" c:type="gushort"/>
				</parameter>
				<parameter name="blue" transfer-ownership="none">
					<type name="ushort" c:type="gushort"/>
				</parameter>
				<parameter name="alpha" transfer-ownership="none">
					<type name="ushort" c:type="gushort"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="DesktopAgnostic.Color" c:type="DesktopAgnosticColor*"/>
			</return-value>
		</constructor>
		<constructor name="from_string" c:identifier="desktop_agnostic_color_new_from_string" throws="1">
			<parameters>
				<parameter name="spec" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="DesktopAgnostic.Color" c:type="DesktopAgnosticColor*"/>
			</return-value>
		</constructor>
		<method name="to_html_color" c:identifier="desktop_agnostic_color_to_html_color">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="char*"/>
			</return-value>
		</method>
		<method name="to_string" c:identifier="desktop_agnostic_color_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="char*"/>
			</return-value>
		</method>
		<method name="get_cairo_color" c:identifier="desktop_agnostic_color_get_cairo_color">
			<parameters>
				<parameter name="red" direction="out" transfer-ownership="full">
					<type name="double" c:type="double"/>
				</parameter>
				<parameter name="green" direction="out" transfer-ownership="full">
					<type name="double" c:type="double"/>
				</parameter>
				<parameter name="blue" direction="out" transfer-ownership="full">
					<type name="double" c:type="double"/>
				</parameter>
				<parameter name="alpha" direction="out" transfer-ownership="full">
					<type name="double" c:type="double"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
		</method>
		<method name="set_cairo_color" c:identifier="desktop_agnostic_color_set_cairo_color">
			<parameters>
				<parameter name="red" transfer-ownership="none">
					<type name="double" c:type="double"/>
				</parameter>
				<parameter name="green" transfer-ownership="none">
					<type name="double" c:type="double"/>
				</parameter>
				<parameter name="blue" transfer-ownership="none">
					<type name="double" c:type="double"/>
				</parameter>
				<parameter name="alpha" transfer-ownership="none">
					<type name="double" c:type="double"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
		</method>
		<function name="cairo_value_to_gdk" c:identifier="desktop_agnostic_color_cairo_value_to_gdk">
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="double" c:type="double"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="ushort" c:type="gushort"/>
			</return-value>
		</function>
		<function name="gdk_value_to_cairo" c:identifier="desktop_agnostic_color_gdk_value_to_cairo">
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="ushort" c:type="gushort"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="double" c:type="double"/>
			</return-value>
		</function>
		<property name="color" writable="1">
			<type name="Gdk.Color" c:type="GdkColor"/>
		</property>
		<property name="red" writable="1">
			<type name="uint" c:type="guint"/>
		</property>
		<property name="green" writable="1">
			<type name="uint" c:type="guint"/>
		</property>
		<property name="blue" writable="1">
			<type name="uint" c:type="guint"/>
		</property>
		<property name="alpha" writable="1">
			<type name="uint" c:type="guint"/>
		</property>
	</class>
	<record name="ColorClass" c:type="DesktopAgnosticColorClass" glib:is-gtype-struct-for="Color">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<class name="ModuleLoader" c:type="DesktopAgnosticModuleLoader" glib:type-name="DesktopAgnosticModuleLoader" glib:get-type="desktop_agnostic_module_loader_get_type" glib:type-struct="ModuleLoaderClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="any" c:type="DesktopAgnosticModuleLoaderPrivate*"/>
		</field>
		<function name="get_default" c:identifier="desktop_agnostic_module_loader_get_default">
			<return-value transfer-ownership="none">
				<type name="DesktopAgnostic.ModuleLoader" c:type="DesktopAgnosticModuleLoader*"/>
			</return-value>
		</function>
		<function name="get_search_paths" c:identifier="desktop_agnostic_module_loader_get_search_paths">
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="int" c:type="gint"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<array length="1">
					<type name="utf8" c:type="char*"/>
				</array>
			</return-value>
		</function>
		<method name="load_from_path" c:identifier="desktop_agnostic_module_loader_load_from_path">
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="GObject.Type" c:type="GType"/>
			</return-value>
		</method>
		<method name="load" c:identifier="desktop_agnostic_module_loader_load">
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="GObject.Type" c:type="GType"/>
			</return-value>
		</method>
		<method name="is_guess_module_loaded" c:identifier="desktop_agnostic_module_loader_is_guess_module_loaded">
			<return-value transfer-ownership="full">
				<type name="boolean" c:type="gboolean"/>
			</return-value>
		</method>
		<method name="guess_module" c:identifier="desktop_agnostic_module_loader_guess_module">
			<parameters>
				<parameter name="library_prefix" transfer-ownership="none">
					<type name="utf8" c:type="const char*"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="GObject.Type" c:type="GType"/>
			</return-value>
		</method>
	</class>
	<record name="ModuleLoaderClass" c:type="DesktopAgnosticModuleLoaderClass" glib:is-gtype-struct-for="ModuleLoader">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<function name="get_module_type" c:identifier="desktop_agnostic_get_module_type" throws="1">
		<parameters>
			<parameter name="prefix" transfer-ownership="none">
				<type name="utf8" c:type="const char*"/>
			</parameter>
			<parameter name="key" transfer-ownership="none">
				<type name="utf8" c:type="const char*"/>
			</parameter>
		</parameters>
		<return-value transfer-ownership="full">
			<type name="GObject.Type" c:type="GType"/>
		</return-value>
	</function>
</namespace>
</repository>
